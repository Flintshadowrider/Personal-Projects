#BlueJ class context
comment0.params=
comment0.target=void\ heal()
comment0.text=\r\n\ Restores\ the\ Class'\ health\ and\ mana\ to\ full\r\n\ @Pre\:\ healthStat\ and\ manaStat\ >0;\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ none\r\n
comment1.params=
comment1.target=int\ getCurrentGold()
comment1.text=\r\n\ Returns\ the\ Class's\ current\ gold\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ int\ myGold\r\n\ @Param\:\ none\r\n
comment10.params=
comment10.target=int\ getCurrentLevel()
comment10.text=\r\n\ Returns\ the\ Class's\ current\ combat\ level\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ int\ myCombatLevel\r\n\ @Param\:\ none\r\n
comment11.params=newVal
comment11.target=void\ setCurrentLevel(int)
comment11.text=\r\n\ Sets\ the\ Class's\ current\ combat\ level\r\n\ @Pre\:\ cannot\ setCurrentLevel(<0)\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ int\ newVal\r\n
comment12.params=
comment12.target=int\ getCurrentExperience()
comment12.text=\r\n\ Returns\ the\ Class's\ current\ Experience\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ int\ experience\r\n\ @Param\:\ none\r\n
comment13.params=newVal
comment13.target=void\ setCurrentExperience(int)
comment13.text=\r\n\ Sets\ the\ Class's\ current\ experience\ at\ newVal,\ will\ check\ for\ a\ level\ up\r\n\ @Pre\:\ Cannot\ setCurrentExperience(<0)\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ int\ newVal\r\n
comment14.params=
comment14.target=int\ getDamage()
comment14.text=\r\n\ Returns\ the\ Class's\ physical\ damage\ output\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ int\ 0\r\n\ @Param\:\ none\r\n
comment15.params=
comment15.target=int\ getMDamage()
comment15.text=\r\n\ Returns\ the\ Class's\ magic\ damage\ output\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ int\ 0\r\n\ @Param\:\ none\r\n
comment16.params=
comment16.target=int\ getResist()
comment16.text=\r\n\ Returns\ the\ Class'\ defence\ incoming\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ int\ 0\r\n\ @Param\:\ none\r\n
comment17.params=
comment17.target=int\ getMResist()
comment17.text=\r\n\ Returns\ the\ Class'\ magic\ defence\ incoming\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ int\ 0\r\n\ @Param\:\ none\r\n
comment18.params=
comment18.target=int\ getSpeed()
comment18.text=\r\n\ Returns\ the\ Class's\ speed\ \r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ \ int\ 0\r\n\ @Param\:\ none\r\n
comment19.params=opponent
comment19.target=void\ attack(Enemy)
comment19.text=\r\n\ Uses\ calculations\ to\ determine\ how\ much\ damage\ the\ Class\ will\ do\ to\ an\ opponent,\ and\ then\ subtracts\ \r\n\ that\ damage\ from\ the\ opponent's\ current\ health\r\n\ @Pre\:\ can\ only\ be\ called\ within\ the\ AdventureMenu\ class\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ Enemy\ opponent\r\n
comment2.params=newVal
comment2.target=void\ setCurrentGold(int)
comment2.text=\r\n\ Sets\ the\ Class's\ current\ gold\ at\ newVal\r\n\ @Pre\:\ newVal<0\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ int\ newVal\r\n
comment20.params=opponent
comment20.target=void\ attack(Wizard)
comment20.text=\r\n\ Uses\ calculations\ to\ determine\ how\ much\ damage\ the\ Class\ will\ do\ to\ an\ opponent,\ and\ then\ subtracts\ \r\n\ that\ damage\ from\ the\ opponent's\ current\ health\r\n\ @Pre\:\ can\ only\ be\ called\ within\ the\ AdventureMenu\ class\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ Wizard\ opponent\r\n
comment21.params=opponent
comment21.target=void\ attack(Warrior)
comment21.text=\r\n\ Uses\ calculations\ to\ determine\ how\ much\ damage\ the\ Class\ will\ do\ to\ an\ opponent,\ and\ then\ subtracts\ \r\n\ that\ damage\ from\ the\ opponent's\ current\ health\r\n\ @Pre\:\ can\ only\ be\ called\ within\ the\ AdventureMenu\ class\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ Warrior\ opponent\r\n
comment22.params=
comment22.target=void\ die()
comment22.text=\r\n\ An\ output\ called\ when\ the\ Class's\ health\ <\=0\r\n\ @Pre\:\ can\ only\ be\ called\ if\ currentHealth\ <\=0\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ none\r\n
comment3.params=
comment3.target=java.lang.String\ getRole()
comment3.text=\r\n\ Returns\ the\ String\ "Easter"\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ String\ "Easter"\r\n\ @Param\:\ none\r\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\r\n\ Returns\ the\ name\ given\ to\ the\ current\ Class\r\n\ Returns\ the\ String\ myName\ of\ the\ Class\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ String\ egg\r\n\ @Param\:\ none\r\n
comment5.params=
comment5.target=boolean\ isDead()
comment5.text=\r\n\ Returns\ a\ boolean\ depending\ on\ whether\ the\ Class's\ current\ health\ is\ >0\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ boolean\r\n\ @Param\:\ none\r\n
comment6.params=
comment6.target=int\ getCurrentHealth()
comment6.text=\r\n\ Returns\ the\ value\ of\ the\ Class's\ current\ health\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ returns\ int\ 0\ \r\n\ @Param\:\ none\r\n
comment7.params=newVal
comment7.target=void\ setCurrentHealth(int)
comment7.text=\r\n\ Sets\ the\ Class's\ current\ health\ at\ newVal\r\n\ @Pre\:\ Cannot\ set\ health\ <0\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ int\ newVal\r\n
comment8.params=
comment8.target=int\ getCurrentMana()
comment8.text=\r\n\ Returns\ the\ Class's\ current\ mana\r\n\ @Pre\:\ none\r\n\ @Post\:\ none\r\n\ @Return\:\ int\ 0\r\n\ @Param\:\ none\r\n
comment9.params=newVal
comment9.target=void\ setCurrentMana(int)
comment9.text=\r\n\ Sets\ the\ Class's\ current\ mana\ to\ newVal\r\n\ @Pre\:\ Cant\ set\ currentMana\ (<0)\r\n\ @Post\:\ none\r\n\ @Return\:\ void\r\n\ @Param\:\ int\ newVal\r\n
numComments=23
